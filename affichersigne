#! /bin/bash
#BENCHEIKH Sabrina et BOUAZIZ Mohammed Amine
#Cette commande affiche le signe zodiacal d'une personne donnée.
	
function aide ()
# affiche l'aide de la commande (si $1 = "--help")
{
	echo "usage : affichersigne affiche le signe zodiacal d'une personne donnée "
	echo "verifie que les parametre de la date sont des entier"
	echo "exemple: affichersigne nom prenom JJ-MM-AAAA"
	echo "verifier que la date est valide"
	return 0
}


function estbissextile ()
#fonction qui envoie 0 (Vrai) si l'année (l'argument passé en parametre)  est bissextille, 1 sinon
{

  if ([ `expr $3 % 400` -eq 0 ]) | ([ `expr $3 % 4` -eq 0 ] && [ `expr $3 % 100` -ne 0 ]);then 
  
	return 0 
	else
	return 1 

  fi 
 
}
function isnum ()
#fonction qui renvoie 0 (vrai) quand l'argument qui lui est passé en paramètre est un nombre (positif ou négatif), 1 sinon
{
   if [[ "$1" =~ ^[-+]?[0-9]+$ ]]; then
   	return 0
   	else
        return 1
   fi
}
function dateval ()
#fonction qui renvoie 0 si la date est valide , 1 sinon (dans le cas ou $1 (le jours) ne serait pas dans l'interval exigé à savoir >0 et <jourmax du mois en question)
#Vu qu'on a listé tous les cas possible si les parametre ne se trouve dans aucun des cas possibles on renverra à la fin 1 ce qui equivaut à faux.
# On rajoutera pour cette commande la fonction est bissextile qu'on utilisera pour le mois de fevrier afin de determiner le nombre de max de jours de ce mois selon l'année entrée en parametre.
#On a définie le nombre de jour maximal des mois dans des catégoris et on a listé les 12 mois de l'année. Dans le cas ou le mois entré ne correspond à aucune des possibilité on reverra 1, ce qui equivaut à faux.
{
case "$2" in
  
 "1" | "3" | "5" | "7"| "8" | "10" | "12" | "01"| "03" | "05" | "07" | "08") 

   if [ $1 -gt 31 ] || [ $1 -le 0 ];then
   	return 1
   	else 
   	return 0
   fi
   ;;

 
  "4" | "6" | "9" | "11" | "04" | "06" | "09" )      
   if [ $1 -gt 30 ] || [ $1 -le 0 ];then
   	return 1
  	else 
   	return 0
   fi
   ;;
 
  "2" | "02" )  
      
   if estbissextile $*; then 

    	if [ $1 -gt 29 ] || [ $1 -le 0 ];then
   	return 1
   	else 
   	return 0
   	fi
   else
   	if [ $1 -gt 28 ] || [ $1 -le 0 ];then
   	return 1
   	else 
   	return 0
   	fi
   fi
   ;;

* )
return 1
;;

esac
}



#programe principal
if [ $# -eq 0 ]; then				#On vérifis la présence des parametres souhaités
echo "pas de parametres!" >&2
aide


elif [ $1 = "--help" ];then			#On affiche l'aide si le parametre entré est --help
aide

else						#Si tout est bon on executera les instruction suivantes:
	j=$(echo $3 | cut -d- -f1)		#On décompose la date entrée en parametre en jour, mois, année dqu'on stockera respectivement dans des variables j m a
	m=$(echo $3 | cut -d- -f2)
	a=$(echo $3 | cut -d- -f3)

	if isnum $j $m $a && dateval "$j" "$m" "$a"; then	#On vérifie la validité de la date. On appel la fonction dateval avec comme parametres: $j $m $a

	echo "$1 $2 est né(e) un "$j/$m" : et a pour signe zodiacal "`bash signezodiaque $j $m`		#Si la date est bien valide, on fera appel à la commande
													#signezodiaque qui calculera à parir du jour et du mois
													#entrés en parametres le signe correspondant puis l'affichera.
	else												
	echo " Veuillez vérifier la saisie de votre date de naissance">&2			#Si la fonction dateval de $j $m et $a renvoie 1(faux) 
	aide											#on affichera un message d'erreur et on appelera la fonction aide.
	fi
fi
